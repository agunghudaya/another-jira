services: 
  postgres:
    image: postgres:14
    container_name: jira-db
    environment:
      - POSTGRES_USER=youruser
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_DB=another-jira-tool
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "youruser", "-d", "another-jira-tool"]
      interval: 5s
      retries: 5
      start_period: 10s
  migrate:
    image: migrate/migrate:v4.16.2
    container_name: jira-migrate
    volumes:
      - ./be/migrations:/migrations  # Mount the migrations folder
    depends_on:
      - postgres
    entrypoint: [ "/migrate" ]
    command:
      [
        "-verbose",
        "-path=/migrations",
        "-database=postgres://youruser:yourpassword@postgres:5432/another-jira-tool?sslmode=disable",
        "up"
      ]

  http-api:
    build:
      context: ./be
      dockerfile: Dockerfile
    environment:
      - GO_ENV=development
    volumes:
      - ./be/.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
    command: ["/app/http-api"]

  worker:
    build:
      context: ./be
      dockerfile: Dockerfile
    environment:
      - GO_ENV=development
    volumes:
      - ./be/.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
    command: ["/app/cron-worker"]  # Runs the worker binary

  frontend:
    build:
      context: ./fe
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./fe:/app
    environment:
      - NODE_ENV=development

volumes:
  postgres-data:
